setwd("C:/Users/anany/Dropbox/Data Analytics/F25-DataAnalytics/Lab1")
setwd("C:/Users/anany/Dropbox/Data Analytics/F25-DataAnalytics/Lab1")
# read data
epi.data <- read_csv("epi_results_2024_pop_gdp.csv")
# read data
epi.data <- read_csv("epi_results_2024_pop_gdp.csv")
library(readr)
library(EnvStats)
# read data
epi.data <- read_csv("epi_results_2024_pop_gdp.csv")
View(epi.data)
# view dataframe
View(epi.data)
epi.data$EPI.new
# print summary of variables in dataframe
summary(epi.data$EPI.new)
# attach dataframe
attach(epi.data)
# print values in variable
EPI.new
EPI <- epi.data$EPI.new
# find NAs in variable - outputs vector of logical values, true if NA, false otherwise
NAs <- is.na(EPI)
EPI[which(NAs)]
# find NAs in variable - outputs vector of logical values, true if NA, false otherwise
NAs <- is.na(EPI)
rownums <- which(NAs)
#EPI[which(NAs)]
EPI[rownums]
# print values in variable
MHP <- epi.data$MHP.new
MHP
# find NAs inv variavle - outputs vector of logical values, true if NA, false otherwise
NAs <- is.na(MHP)
# print NAs
MHP[which(NAs)]
rownums <- which(NAs)
# take subset of NOT NAs from variable
MHP.noNA <- MHP[!NAs]
MHP.noNA
# filter for only values above 30
MHP.above30 <- MHP.noNA[MHP.noNA>30]
MHP.above30
# stats
summary(MHP.above30)
# boxplot of variable(s)
boxplot(EPI, MHP.above30, names = c("EPI","MHP"))
# histogram (frequency distribution)
hist(EPI)
# define sequence of values over which to plot histogram
x <- seq(20., 80., 10)
# histogram (frequency distribution) over range
hist(EPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# define sequence of values over which to plot histogram
x <- seq(20., 80., 5)
# histogram (frequency distribution) over range
hist(EPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE,bw=5.)) # or try bw=“SJ”
# histogram (frequency distribution) over range
hist(EPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE,bw=5.)) # or try bw=“SJ”
# histogram (frequency distribution) over range
hist(EPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE,bw="SJ")) # or try bw=“SJ”
# print rug
rug(EPI)
x <- seq(20., 80., 5)
# histogram (frequency distribution) over range
hist(EPI, x, prob=TRUE)
# range
x1<-seq(20,80,1)
# generate probability density values for a normal distribution with given mean and sd
d1 <- dnorm(x1,mean=45, sd=11,log=FALSE)
# print density values
lines(x1,d1)
mean(EPI)
sd(EPI)
# print density values
lines(x1,d1)
# generate probability density values for a normal distribution with given mean and sd
d2 <- dnorm(x1,mean=64, sd=11,log=FALSE)
# print density values
lines(x1,d2)
# print density values
lines(x1,.5*d2)
# plot ecdfs
plot(ecdf(EPI), do.points=FALSE, verticals=TRUE)
plot(ecdf(MHP), do.points=FALSE, verticals=TRUE)
qqnorm(x);
qqnorm(x); qqline(x)
# print quantile-quantile plot for random numbers from a normal distribution with theoretical normal distribution
x <- rnorm(500)
qqnorm(x); qqline(x)
# print quantile-quantile plot for random numbers from a normal distribution with theoretical normal distribution
x <- rnorm(180, mean=45, sd=11)
qqnorm(x); qqline(x)
# print quantile-quantile plot for random numbers from a normal distribution with theoretical normal distribution
x <- rnorm(300, mean=45, sd=11)
qqnorm(x); qqline(x)
xd <- dnorm(300, mean=45, sd=11)
xd
cd <- dnorm(x, mean=45, sd=11)
cd
sum(cd)
# print quantile-quantile plot for random numbers from a normal distribution with theoretical normal distribution
x <- rnorm(1000, mean=45, sd=11)
qqnorm(x); qqline(x)
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), EPI.new.sub, xlab = "Q-Q plot for norm dsn")
qqline(EPI.new.sub)
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), EPI.new.sub, xlab = "Q-Q plot for norm dsn")
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), EPI.new.sub, xlab = "Q-Q plot for norm dsn")
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), EPI, xlab = "Q-Q plot for norm dsn")
qqline(EPI)
# print quantile-quantile plot for 2 variables
qqplot(EPI, MHP, xlab = "Q-Q plot for EPI vs MHP")
qqplot(x, EPI, xlab = "Q-Q plot for EPI vs MHP")
qqline(EPI)
y <- rnorm(500)
qqplot(x, y, xlab = "Q-Q plot for EPI vs MHP")
qqline(y)
x <- rnorm(500)
y <- rnorm(500)
hist(x)
hist(y)
shapiro.test(x)
ad.test(x)
library(EnvStats)
ad.test(x)
library(nortest)
ad.test(x)
shapiro.test(y)
ad.test(x)
ad.test(y)
ks.test(x,y)
wilcox.test(x,y)
var.test(x,y)
t.test(x,y)
setwd("C:/Users/anany/Dropbox/Data Analytics/F25-DataAnalytics/Lab1")
library(readr)
library(EnvStats)
library(nortest)
epi.data <- read_csv("epi_results_2024_pop_gdp.csv")
PAR <- epi.data$PAR.new
SPI <- epi.data$SPI.new
summary(PAR)
summary(SPI)
boxplot(PAR, SPI, names = c("PAR","SPI"))
hist(PAR)
lines(density(PAR,na.rm=TRUE,bw="SJ")) # or try bw=“SJ”
hist(PAR)
lines(density(PAR,na.rm=TRUE,bw="SJ")) # or try bw=“SJ”
mean(PAR)
NAs <- is.na(PAR)
PAR.noNA <- PAR[!NAs]
hist(PAR.noNA)
lines(density(PAR.noNA,na.rm=TRUE,bw="SJ")) # or try bw=“SJ”
hist(PAR)
lines(density(PAR,na.rm=TRUE,bw="SJ")) # or try bw=“SJ”
x1<-seq(20,80,1)
d1 <- dnorm(x1,mean=45, sd=11,log=FALSE)
lines(x1,d1)
sd(PAR)
hist(PAR, probability = TRUE)
lines(density(PAR,na.rm=TRUE,bw="SJ")) # or try bw=“SJ”
x1<-seq(20,80,1)
d1 <- dnorm(x1,mean=41, sd=11,log=FALSE)
lines(x1,d1)
NAs <- is.na(PAR)
PAR.noNA <- PAR[!NAs]
sd(PAR.noNA)
d1 <- dnorm(x1,mean=41, sd=26,log=FALSE)
lines(x1,d1)
hist(PAR, probability = TRUE)
lines(density(PAR,na.rm=TRUE,bw="SJ")) # or try bw=“SJ”
x1<-seq(20,80,1)
d1 <- dnorm(x1,mean=41, sd=26,log=FALSE)
lines(x1,d1)
lines(x1,d1, col="red")
NAs <- is.na(SPI)
SPI.noNA <- SPI[!NAs]
sd(SPI.noNA)
hist(SPI, probability = TRUE)
lines(density(SPI,na.rm=TRUE,bw="SJ")) # or try bw=“SJ”
x1<-seq(20,80,1)
d1 <- dnorm(x1,mean=49, sd=28,log=FALSE)
lines(x1,d1, col="red")
plot(ecdf(PAR), do.points=FALSE, verticals=TRUE)
plot(ecdf(SPI), do.points=FALSE, verticals=TRUE)
qqnorm(PAR); qqline(PAR)
qqnorm(PAR, main = "Q-Q Plot of PAR vs Normal")
qqline(PAR, col = "red")
qqnorm(SPI, main = "Q-Q Plot of SPI vs Normal")
qqline(SPI, col = "red")
qqplot(PAR, SPI, main = "Q-Q Plot of PAR vs SPI",
xlab = "PAR Quantiles", ylab = "SPI Quantiles")
abline(0, 1, col = "blue")
x <- rnorm(500)
y <- rnorm(500)
hist(x)
hist(y)
shapiro.test(x)
shapiro.test(y)
x
shapiro.test(x)
shapiro.test(PAR)
shapiro.test(PAR)
shapiro.test(SPI)
ad.test(x)
ad.test(PAR)
shapiro.test(SPI)
ad.test(SPI)
ks.test(PAR,SPI)
wilcox.test(PAR,SPI)
var.test(PAR,SPI)
t.test(PAR,SPI)
